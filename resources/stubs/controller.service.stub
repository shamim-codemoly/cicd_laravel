<?php

namespace DummyNamespace;

use App\Http\Controllers\Controller;
use App\Http\Requests\DummyModel\DummyModelStoreRequest;
use App\Http\Requests\DummyModel\DummyModelUpdateRequest;
use App\Http\Requests\DummyModel\DummyModelDeleteRequest;
use App\Services\DummyModel\DummyModelService;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Illuminate\Contracts\View\View;
use RealRashid\SweetAlert\Facades\Alert;

class DummyClass extends Controller
{
    public function __construct(
        private DummyModelService $service
    ){}

    public function all(Request $request): View
    {
        $models = $this->service->getAll($request);

        return view('pages.model.index', compact('models'));
    }
    public function index(Request $request): View
    {
        $perPage = request('per_page') ?? env('PER_PAGE');
        $models = $this->service->index($request, $perPage);

        return view('pages.model.index', compact('models'));
    }

    public function create(): View
    {
        return view('pages.model.create');
    }

    public function store(DummyModelStoreRequest $request)
    {
        DB::beginTransaction();
        try {
            $this->service->create($request->validated(), $request);
            DB::commit();

            Alert::toast('Action is successful!!','success');
            return redirect()->route('models.index');
        } catch (\Exception $e) {
            DB::rollBack();

            Alert::error('Error', $e->getMessage());
            return redirect()->route('models.index');
        }

    }

    public function show(int $id)
    {
        $model = $this->service->getById($id);

        return view('pages.model.show', compact('model'));
    }

    public function edit(int $id)
    {
        $model = $this->service->getById($id);

        return view('pages.model.edit', compact('model'));
    }

    public function update(DummyModelUpdateRequest $request, int $id)
    {
        DB::beginTransaction();
        try {
            $this->service->update($id, $request->validated(), $request);

            DB::commit();
            Alert::toast('Action is successful!!','success');

            return redirect()->route('models.index');
        } catch (\Exception $e) {
            DB::rollBack();

            Alert::error('Error', $e->getMessage());
            return redirect()->route('models.index');
        }

    }

    public function destroy(DummyModelDeleteRequest $request, int $id)
    {
        DB::beginTransaction();
        try {
            $this->service->delete($id);

            DB::commit();
            Alert::toast('Action is successful!!','success');

            return redirect()->route('models.index');
        } catch (\Exception $e) {
            DB::rollBack();
            Alert::error('Error', $e->getMessage());

            return redirect()->route('models.index');
        }

    }
}
