name: Deploy to DigitalOcean

on:
  push:
    branches:
      - dev

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Cache composer dependencies
  #       uses: actions/cache@v4
  #       with:
  #         path: vendor
  #         key: composer-${{ hashFiles('**/composer.lock') }}
  #         restore-keys: |
  #           composer-

  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: "8.2"
  #         extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
  #         tools: composer:v2
  #         coverage: xdebug

  #     - name: Copy .env file
  #       run: |
  #         cp .env.example .env

  #     - name: Install dependencies
  #       run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

  #     - name: Generate key
  #       run: php artisan key:generate

  #     - name: Directory Permissions
  #       run: chmod -R 777 storage bootstrap/cache

  #     # - name: Create Database
  #     #   run: |
  #     #     mkdir -p database
  #     #     touch database/database.sqlite

  #     - name: Passport Install
  #       run: php artisan passport:keys
  #       env:
  #         DB_CONNECTION: mysql
  #         DB_DATABASE: cicd_testing

  #     # - name: Execute tests
  #     #   env:
  #     #     DB_CONNECTION: mysql
  #     #     DB_DATABASE: cicd_testing
  #     #   run: php artisan test

  #   services:
  #     mysql:
  #       image: mysql:8.0
  #       env:
  #         MYSQL_ALLOW_EMPTY_PASSWORD: yes
  #         MYSQL_DATABASE: cicd_testing
  #       ports:
  #         - 3306:3306
  #       options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=5s --health-retries=3

  deploy:
    #needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to DEV Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASS }}
          script: |
            cd  /var/www/html/molyecom/ && ./main_deplyer.sh
